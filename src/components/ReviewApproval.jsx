import React from 'react';
import jsPDF from 'jspdf';
import 'jspdf-autotable'; 

function ReviewApproval({ generated, onApprove, onSuggest }) {
  // Helper to format timetable data for the PDF table
  const getTableData = () => {
    const allTableData = [];
    const classKeys = Object.keys(generated);

    classKeys.forEach(className => {
      const classData = [
        [`Timetable for Class ${className}`],
        [], // Empty row for spacing
        ['Day', 'Period 1', 'Period 2', 'Period 3', 'Period 4'], // Assuming 4 periods per day
      ];
      
      const days = Object.keys(generated[className]);
      days.forEach(day => {
        const row = [day, ...generated[className][day]];
        classData.push(row);
      });

      allTableData.push(classData);
    });

    return allTableData;
  };

  const handleDownloadPDF = () => {
    const doc = new jsPDF();
    doc.setFontSize(18);
    doc.setTextColor('#333');

    const allTables = getTableData();
    let currentY = 20;

    allTables.forEach((table, index) => {
      if (index > 0) {
        doc.addPage();
        currentY = 20;
      }
      
      doc.text(table[0][0], 14, currentY);

      doc.autoTable({
        startY: currentY + 10,
        head: [table[2]],
        body: table.slice(3),
        theme: 'striped',
        styles: { fontSize: 10, cellPadding: 3 },
        headStyles: { fillColor: '#007bff', textColor: '#fff', fontStyle: 'bold' },
        didDrawPage: function(data) {
          doc.setFontSize(10);
          doc.setTextColor('#999');
          doc.text(`Generated by TimetablePro | Page ${data.pageNumber}`, data.settings.margin.left, doc.internal.pageSize.height - 10);
        }
      });
      currentY = doc.autoTable.previous.finalY;
    });
    
    doc.save('final-timetables.pdf');
  };

  const tableStyle = {
    width: '100%',
    borderCollapse: 'collapse',
    fontFamily: "'Segoe UI', Roboto, sans-serif",
    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
    borderRadius: '8px',
    overflow: 'hidden',
    marginBottom: '20px',
  };

  const thStyle = {
    backgroundColor: '#007bff',
    color: '#fff',
    padding: '12px 15px',
    textAlign: 'left',
  };

  const tdStyle = {
    padding: '12px 15px',
    border: '1px solid #ddd',
    textAlign: 'left',
    fontSize: '0.9rem',
  };

  const cardStyle = {
    border: '1px solid #e0e0e0',
    borderRadius: '8px',
    padding: '20px',
    backgroundColor: '#f9f9f9',
    marginBottom: '20px',
  };

  const buttonStyle = {
    padding: '12px 24px',
    fontSize: '16px',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
    fontWeight: 'bold',
    transition: 'background-color 0.3s ease',
    marginRight: '10px',
  };

  const approveButtonStyle = { ...buttonStyle, backgroundColor: '#28a745', color: '#fff' };
  const suggestButtonStyle = { ...buttonStyle, backgroundColor: '#6c757d', color: '#fff' };
  const downloadButtonStyle = { ...buttonStyle, backgroundColor: '#007bff', color: '#fff' };

  const classKeys = Object.keys(generated);
  const periodHeaders = Array.from({ length: 4 }, (_, i) => `Period ${i + 1}`);

  return (
    <div style={{ fontFamily: "'Segoe UI', Roboto, sans-serif", maxWidth: '100%', margin: 'auto', padding: '20px' }}>
      <h2 style={{ color: '#333', borderBottom: '2px solid #ddd', paddingBottom: '10px', marginBottom: '20px', textAlign: 'center' }}>
        Review & Approval âœ…
      </h2>
      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}>
        {classKeys.map(cls => (
          <div key={cls} style={{ ...cardStyle, flex: '1 1 45%' }}>
            <h3 style={{ margin: '0 0 20px 0', color: '#555' }}>Class {cls} Timetable</h3>
            <table style={tableStyle}>
              <thead>
                <tr>
                  <th style={{ ...thStyle, borderTopLeftRadius: '8px' }}>Day</th>
                  {periodHeaders.map((header, index) => (
                    <th key={index} style={thStyle}>{header}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {Object.keys(generated[cls]).map((day, dayIndex) => (
                  <tr key={dayIndex} style={{ backgroundColor: dayIndex % 2 === 0 ? '#fff' : '#f8f9fa' }}>
                    <td style={{ ...tdStyle, fontWeight: 'bold' }}>{day}</td>
                    {generated[cls][day].map((period, periodIndex) => (
                      <td key={periodIndex} style={tdStyle}>
                        <div style={{ display: 'flex', flexDirection: 'column' }}>
                          <span style={{ fontWeight: 'bold' }}>{period.split(' by ')[0]}</span>
                          <span style={{ fontSize: '0.8em', color: '#6c757d' }}>{period.split(' by ')[1]}</span>
                        </div>
                      </td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        ))}
      </div>
      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}>
        <button onClick={onApprove} style={approveButtonStyle}>Approve & Publish</button>
        <button onClick={onSuggest} style={suggestButtonStyle}>Suggest Rearrangement</button>
        <button onClick={handleDownloadPDF} style={downloadButtonStyle}>Download PDF</button>
      </div>
    </div>
  );
}

export default ReviewApproval;